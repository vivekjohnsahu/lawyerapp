import { Component, OnInit, ViewChild } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { Router, Navigation } from '@angular/router';
import { Camera, CameraOptions } from '@ionic-native/camera/ngx';
import { NavController,AlertController,ActionSheetController, MenuController, IonSlides, Platform  } from '@ionic/angular';
import { GlobalService } from '../../globalServices/global.service'
import { SplashScreen } from '@ionic-native/splash-screen/ngx';
import { StatusBar } from '@ionic-native/status-bar/ngx';
import { NgxSpinnerService } from 'ngx-spinner';

@Component({
  selector: 'app-register',
  templateUrl: './register.page.html',
  styleUrls: ['./register.page.scss'],
})
export class RegisterPage implements OnInit {

	ImageBind:any = 'https://www.w3schools.com/howto/img_avatar.png';
	public _status:any;
	signupUser: FormGroup;
	userData = {
		mark_select:"",
		firstname:"",
		lastname:"",
		email:"",
		number:"",
		date:"",
		country:"",
		city:"",
		address:"",
		image:"",
		register:""
	};

	@ViewChild('slides') slides: IonSlides;

	constructor(
		private router : Router, 
		private camera:Camera, 
		private actionSheetController:ActionSheetController,
		public alertController: AlertController,
		public gobalService:GlobalService,
		public menu: MenuController,
		private splashScreen: SplashScreen,
		private statusBar: StatusBar,
		private spinner: NgxSpinnerService,
	) {
		//  validation pattern start
		let email_pattern = /^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;
		this.signupUser = new FormGroup({
			mark_select: new FormControl('', [Validators.required]),    
			firstname: new FormControl('', [Validators.required]),       
			lastname: new FormControl(),      
			email: new FormControl('', [Validators.required, Validators.pattern(email_pattern)]),            
			number: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(14)]),
			date: new FormControl('', [Validators.required]),
			country: new FormControl('', [Validators.required]),
			city:new FormControl('', [Validators.required]),
			address:new FormControl('', [Validators.required]),
		});
		//  validation pattern end
	}

	ngOnInit() {
		// set status bar color
		this.statusBar.overlaysWebView(false);
		this.statusBar.backgroundColorByHexString('#233658;');
	}

// manu bar hide
	ionViewWillEnter() {
		this.menu.enable(false);
	}

// manu bar show leave page
	ionViewDidLeave() {
		this.menu.enable(false);
	}


//  image popup start
	async SelectPhoto() {
		const actionSheet = await this.actionSheetController.create({
			buttons: [{
				text: 'Camera',
				icon: 'Camera',
				handler: () => {
				this.takePhoto(1);
				}
			}, {
				text: 'Gallery',
				icon: 'images',
				handler: () => {
				this.takePhoto(2);
				}
			}, {
				text: 'Cancel',
				icon: 'close',
				role: 'cancel',
			}]
		});
		await actionSheet.present();
	}
//  image popup end

//  get image path start
	takePhoto(sourceType:number) {
		const options: CameraOptions = {
			quality: 50,
			destinationType: this.camera.DestinationType.DATA_URL,
			encodingType: this.camera.EncodingType.JPEG,
			mediaType: this.camera.MediaType.PICTURE,
			correctOrientation: true,
			sourceType: sourceType==1?this.camera.PictureSourceType.CAMERA:this.camera.PictureSourceType.PHOTOLIBRARY,     //this.camera.PictureSourceType.CAMERA,
		}
		this.camera.getPicture(options).then((imgData) => {
			this.ImageBind= "data:image/jpg;base64," + imgData;
		});
	}
//  get image path end

// radio button start
	checkValue(e){ 
		this.userData.mark_select=e.value
	}
// radio button end

//  signUp function start
	async signUp(){
		this.userData = {
			"mark_select": this.userData.mark_select,
			"firstname": this.userData.firstname,
			"lastname": this.userData.firstname,
			"email": this.userData.email,
			"number":this.userData.number,
			"date": this.userData.date,
			"country": this.userData.country,
			"city": this.userData.city,
			"address": this.userData.city,
			"image":this.ImageBind,
			"register":"firm"
		};
		console.log(this.userData)
		this.spinner.show();
		this.gobalService.register_user(this.userData)
		.then(async data => {
			this._status = data['status']
			this.spinner.hide();
			if(this._status=='200'){
				const alert = await this.alertController.create({
					message: 'You have successfully registered and logged in.',
					buttons: [{
					text: 'Ok',
						handler: () => {
							this.router.navigateByUrl('/sign-in')
							// this.signupUser.reset();
						}
					}]
				});
				await alert.present();
			}else if(this._status=='400'){
				const alert = await this.alertController.create({
					message: 'you have already registered.',
					buttons: [{text: 'Ok',}]
				});
				await alert.present();
			}else{
				const alert = await this.alertController.create({
					message: 'You have not registered try again.',
					buttons: [{text: 'Close'}]
				});
				await alert.present();
			}
	        
		});   
	}
//  signUp function end

// number Accept only start
	numberAccept(event): boolean {
		const charCode = (event.which) ? event.which : event.keyCode;
		if(charCode > 31 && (charCode < 48 || charCode > 57)) {
		  	return false;
		}
		return true;
	}
// number Accept only end
}

