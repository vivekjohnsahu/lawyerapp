import { Component, OnInit, ViewChild } from '@angular/core';
import { Router } from '@angular/router';
import { ModalController } from '@ionic/angular';
import { ModalpagePage } from '../modalpage/modalpage.page'; 
import { ActivatedRoute } from '@angular/router';
import { SplashScreen } from '@ionic-native/splash-screen/ngx';
import { StatusBar } from '@ionic-native/status-bar/ngx';
import { AlertController, MenuController, Platform } from '@ionic/angular';



@Component({
  selector: 'app-home',
  templateUrl: 'home.page.html',
  styleUrls: ['home.page.scss'],
})
export class HomePage implements OnInit {

  // @ViewChild('slides') slides: IonSlides;
  public alertShown:boolean = false;
  
  constructor(
    private router: Router, 
    private route: ActivatedRoute, 
    public modalController: ModalController,
    public menu:MenuController,
    private splashScreen: SplashScreen,
    private statusBar: StatusBar,
    private platform: Platform,
    public alertCtrl: AlertController,
  ){
    platform.ready().then(() => {
			statusBar.styleDefault();
			splashScreen.hide();
			this.platform.backButton.subscribe(() => {
        console.log(this.router.url)
        if(this.router.url=='/home/1' || this.router.url=='/home/2'){
          console.log(this.router.url)
          if (this.alertShown==false) {
            this.presentConfirm();  
          }
        }
			})
		});
  }

  async presentModal() {
    const modal = await this.modalController.create({
      component: ModalpagePage
    });
    await modal.present();
  } 

  user_id:any;

  ngOnInit(){
    this.route.params.subscribe(params => {
      this.user_id = params['id']; 
   });
  }

  // ionViewWillEnter() {
  //   this.menu.enable(true);
  // }
  
  // ionViewDidLeave() {
  //   this.menu.enable(true);
  // }

  search(){
    this.router.navigateByUrl('/search')
  }
  firm_details(){
    this.router.navigateByUrl('/firm-details')
  }


  // app exit popup start 
	async presentConfirm() {
		let alert = await this.alertCtrl.create({
			message: 'Do you want Exit?',
			buttons: [
				{
					text: 'Cancel',
					role: 'cancel',
					handler: () => {
						console.log('Cancel clicked');
						this.alertShown=false;
					}
				},
				{
					text: 'Yes',
					handler: () => {
						console.log('Yes clicked');
						navigator['app'].exitApp();
					}
				}
			]
		});
		await alert.present().then(()=>{
		this.alertShown=true;
		});
	}
// app exit popup end 
}
