import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';

@Injectable({
  providedIn: 'root'
})
export class GlobalService {

	public BaseUrl= '';

  	constructor(public http: HttpClient,){
		// s
	}
		
	register_user(data){
		const headers = new HttpHeaders({
			'Content-Type': 'application/x-www-form-urlencoded',
		});
		return new Promise((resolve, reject) => {
		   	this.http.post(this.BaseUrl, JSON.stringify(data),{"headers":headers}).subscribe(res => {
				resolve(res);
			}, 
			(err) => {
				reject(err);
				alert("Service Error");
			});
		});
	}

// ---------------------------------------------------------
	login_user(data){
		const headers = new HttpHeaders({
			'Content-Type': 'application/x-www-form-urlencoded',
		});
		return new Promise((resolve, reject) => {
		   	this.http.post(this.BaseUrl, JSON.stringify(data),{"headers":headers}).subscribe(res => {
				resolve(res);
			}, 
			(err) => {
				reject(err);
				alert("Service Error");
			});
		});
	}
// ---------------------------------------------------------

	forgot_otp(data){
		const headers = new HttpHeaders({
			'Content-Type': 'application/x-www-form-urlencoded',
		});
		return new Promise((resolve, reject) => {
		   	this.http.post(this.BaseUrl, JSON.stringify(data),{"headers":headers}).subscribe(res => {
				resolve(res);
			}, 
			(err) => {
				reject(err);
				alert("Service Error");
			});
		});
	}
// ---------------------------------------------------------

	get_otp(data){
		const headers = new HttpHeaders({
			'Content-Type': 'application/x-www-form-urlencoded',
		});
		return new Promise((resolve, reject) => {
		   	this.http.post(this.BaseUrl, JSON.stringify(data),{"headers":headers}).subscribe(res => {
				resolve(res);
			}, 
			(err) => {
				reject(err);
				alert("Service Error");
			});
		});
	}
// ---------------------------------------------------------

	create_new_pass(data){
		const headers = new HttpHeaders({
			'Content-Type': 'application/x-www-form-urlencoded',
		});
		return new Promise((resolve, reject) => {
		   	this.http.post(this.BaseUrl, JSON.stringify(data),{"headers":headers}).subscribe(res => {
				resolve(res);
			}, 
			(err) => {
				reject(err);
				alert("Service Error");
			});
		});
	}
// ---------------------------------------------------------

// ---------------------------------------------------------

  consultants(){
	const headers = new HttpHeaders({
		'Content-Type': 'application/x-www-form-urlencoded',
	});
	return new Promise((resolve, reject) => {
		   this.http.get(this.BaseUrl,{"headers":headers}).subscribe(res => {
			resolve(res);
		}, 
		(err) => {
			reject(err);
			alert("Service Error");
		});
	});
  }
// ---------------------------------------------------------

}

